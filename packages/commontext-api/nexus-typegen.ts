/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
     */
    json<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "JSON";
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
     */
    json<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "JSON";
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
  JSON: any
}

export interface NexusGenObjects {
  Document: { // root type
    content?: NexusGenScalars['JSON'] | null; // JSON
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    descriptor?: string | null; // String
    id?: string | null; // String
    preset?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Link: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    description?: string | null; // String
    title?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    url?: string | null; // String
  }
  Mutation: {};
  Query: {};
  SavedItem: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    data?: NexusGenScalars['JSON'] | null; // JSON
    id?: string | null; // String
    type?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  User: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    documentTree?: NexusGenScalars['JSON'] | null; // JSON
    email?: string | null; // String
    frequency?: string | null; // String
    role?: string | null; // String
    subscription?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Document: { // field return type
    content: NexusGenScalars['JSON'] | null; // JSON
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    creator: NexusGenRootTypes['User'] | null; // User
    descriptor: string | null; // String
    id: string | null; // String
    preset: string | null; // String
    savedItems: Array<NexusGenRootTypes['SavedItem'] | null> | null; // [SavedItem]
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Link: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    description: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    url: string | null; // String
  }
  Mutation: { // field return type
    addSavedItem: NexusGenRootTypes['SavedItem'] | null; // SavedItem
    confirmFreemium: NexusGenRootTypes['User'] | null; // User
    confirmSubscription: NexusGenRootTypes['User'] | null; // User
    export: string | null; // String
    newCheckout: string | null; // String
    newDocument: NexusGenRootTypes['Document'] | null; // Document
    registerUser: string; // String!
    updateDocument: NexusGenRootTypes['Document'] | null; // Document
    updateUser: NexusGenRootTypes['User'] | null; // User
  }
  Query: { // field return type
    authenticate: string | null; // String
    document: NexusGenRootTypes['Document'] | null; // Document
    getCurrentUser: NexusGenRootTypes['User'] | null; // User
    getGeneratedText: string | null; // String
    getPortalUrl: string | null; // String
    myDocuments: Array<NexusGenRootTypes['Document'] | null> | null; // [Document]
  }
  SavedItem: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    data: NexusGenScalars['JSON'] | null; // JSON
    document: NexusGenRootTypes['Document'] | null; // Document
    id: string | null; // String
    type: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  User: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    documentTree: NexusGenScalars['JSON'] | null; // JSON
    documents: Array<NexusGenRootTypes['Document'] | null> | null; // [Document]
    email: string | null; // String
    frequency: string | null; // String
    role: string | null; // String
    subscription: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
}

export interface NexusGenFieldTypeNames {
  Document: { // field return type name
    content: 'JSON'
    createdAt: 'DateTime'
    creator: 'User'
    descriptor: 'String'
    id: 'String'
    preset: 'String'
    savedItems: 'SavedItem'
    title: 'String'
    updatedAt: 'DateTime'
  }
  Link: { // field return type name
    createdAt: 'DateTime'
    description: 'String'
    title: 'String'
    updatedAt: 'DateTime'
    url: 'String'
  }
  Mutation: { // field return type name
    addSavedItem: 'SavedItem'
    confirmFreemium: 'User'
    confirmSubscription: 'User'
    export: 'String'
    newCheckout: 'String'
    newDocument: 'Document'
    registerUser: 'String'
    updateDocument: 'Document'
    updateUser: 'User'
  }
  Query: { // field return type name
    authenticate: 'String'
    document: 'Document'
    getCurrentUser: 'User'
    getGeneratedText: 'String'
    getPortalUrl: 'String'
    myDocuments: 'Document'
  }
  SavedItem: { // field return type name
    createdAt: 'DateTime'
    data: 'JSON'
    document: 'Document'
    id: 'String'
    type: 'String'
    updatedAt: 'DateTime'
  }
  User: { // field return type name
    createdAt: 'DateTime'
    documentTree: 'JSON'
    documents: 'Document'
    email: 'String'
    frequency: 'String'
    role: 'String'
    subscription: 'String'
    updatedAt: 'DateTime'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    addSavedItem: { // args
      data: string; // String!
      documentId: string; // String!
      type: string; // String!
    }
    confirmSubscription: { // args
      sessionId: string; // String!
      token: string; // String!
    }
    export: { // args
      html: string; // String!
      type: string; // String!
    }
    newCheckout: { // args
      frequency: string; // String!
    }
    newDocument: { // args
      preset: string; // String!
    }
    updateDocument: { // args
      content?: string | null; // String
      descriptor?: string | null; // String
      documentId: string; // String!
      title?: string | null; // String
    }
    updateUser: { // args
      documentTree?: string | null; // String
    }
  }
  Query: {
    document: { // args
      documentId: string; // String!
    }
    getGeneratedText: { // args
      contextText: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}